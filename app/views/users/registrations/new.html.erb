<div class="container usertoolview p-5">
  <h2 align="center">Sign up</h2>
  <br>
  <%= form_for(resource, as: resource_name, url: registration_path(:user)) do |f| %>
  <%= render "devise/shared/error_messages", resource: resource %>
  <div class="form-group ">
    <div align="center">
    </div>
    <center>
    <div class="image-upload">
      <label for="file-input">
        <div class="changeavt">
          <i class="fa fa-exchange"></i>
          <%= image_tag "",class: "img",id: "a" %>
        </div>
      </label>
      <%= f.file_field :avatar, id:"file-input" %>
    </div>
    </center>
  </div>
  <div class="form-group">
    <%= f.label :firstname %><br />
    <%= f.text_field :firstname, autofocus: true, class: "form-control" %>
  </div>
  <div class="form-group">
    <%= f.label :lastname %><br />
    <%= f.text_field :lastname, autofocus: true , class: "form-control"%>
  </div>
  <div class="form-group">
    <label for="file-input">Address</label>
    <%= f.text_area :address, class: "form-control"%>
  </div>
  <div class="form-group">
    <%= f.label :phone %><br />
    <%= f.text_field :phone, autofocus: true, class: "form-control" %>
  </div>
  <div class="form-group">
    <%= f.label :email %><br />
    <%= f.email_field :email, autofocus: true , class: "form-control"%>
  </div>
  <div class="form-group">
    <%= f.label :password %>
    <% if @minimum_password_length %>
    <em>(<%= @minimum_password_length %> characters minimum)</em>
    <% end %><br />
    <%= f.password_field :password, autocomplete: "new-password", class: "form-control" %>
  </div>
  <div class="form-group">
    <%= f.label :password_confirmation %><br />
    <%= f.password_field :password_confirmation, autocomplete: "new-password", class: "form-control" %>
  </div>
  <div class="form-groups center">
    <%= f.submit "Sign up", class: "btn btn-primary w-100" %>
  </div>
  <% end %>
</div>
<br>
<script type="text/javascript">
  $( document ).ready(function() {
  var resetinput = $('#file-input');
   resetinput.replaceWith(resetinput.val('').clone(true));
    // $('.fa-exchange').hover(function(){
    //       $(this).fadeOut( 100 );
    //         $(this).fadeIn( 500 );
    // });

  $('#file-input').change(function () {
          if (this.files && this.files[0]) {
      
    
           if( checkTypeimg(this.files[0].type) == false){
            var input = $('#file-input');
             alert("only image type jpeg,png");
             input.replaceWith(input.val('').clone(true));
            document.getElementById("a").src = "";
                  return;
            }
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#a').attr('src', e.target.result);
            }
            reader.readAsDataURL(this.files[0]);
        }
    });
  function checkTypeimg(type){
        switch (type) {
          case "image/png":
           return true;
            break;
          case "image/jpeg":
           return true;
            break;
         default:
            return false 
            break;
        }
    }
})

</script>